// Generated by view binder compiler. Do not edit!
package com.lnm011223.foods_secret.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import com.lnm011223.foods_secret.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ResultItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView leftImage;

  @NonNull
  public final TextView resultBodytext;

  @NonNull
  public final MaterialCardView resultCard;

  @NonNull
  public final TextView resultTitletext;

  private ResultItemBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView leftImage,
      @NonNull TextView resultBodytext, @NonNull MaterialCardView resultCard,
      @NonNull TextView resultTitletext) {
    this.rootView = rootView;
    this.leftImage = leftImage;
    this.resultBodytext = resultBodytext;
    this.resultCard = resultCard;
    this.resultTitletext = resultTitletext;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ResultItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ResultItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.result_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ResultItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.left_image;
      ImageView leftImage = ViewBindings.findChildViewById(rootView, id);
      if (leftImage == null) {
        break missingId;
      }

      id = R.id.result_bodytext;
      TextView resultBodytext = ViewBindings.findChildViewById(rootView, id);
      if (resultBodytext == null) {
        break missingId;
      }

      id = R.id.result_card;
      MaterialCardView resultCard = ViewBindings.findChildViewById(rootView, id);
      if (resultCard == null) {
        break missingId;
      }

      id = R.id.result_titletext;
      TextView resultTitletext = ViewBindings.findChildViewById(rootView, id);
      if (resultTitletext == null) {
        break missingId;
      }

      return new ResultItemBinding((ConstraintLayout) rootView, leftImage, resultBodytext,
          resultCard, resultTitletext);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
